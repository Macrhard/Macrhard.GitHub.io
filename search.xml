<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>ceshi</title>
      <link href="/2018/03/29/ceshi/"/>
      <url>/2018/03/29/ceshi/</url>
      <content type="html"><![CDATA[<h1 id="h1"><a href="#h1" class="headerlink" title="h1"></a>h1</h1><h2 id="h2"><a href="#h2" class="headerlink" title="h2"></a>h2</h2><h3 id="h3"><a href="#h3" class="headerlink" title="h3"></a>h3</h3><p>[TOC]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">int test();</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a = 0, b = 0;</span><br><span class="line">b =test();</span><br><span class="line"></span><br><span class="line">printf(&quot;a = %d, b = %d\n&quot;,a,b);</span><br><span class="line">return 0;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int test()</span><br><span class="line">&#123;</span><br><span class="line">int c = 3, d = 5;</span><br><span class="line"></span><br><span class="line">&amp;a = &amp;c;</span><br><span class="line"></span><br><span class="line">return d; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>幸福快乐的生活</title>
      <link href="/2018/03/29/%E5%B9%B8%E7%A6%8F%E5%BF%AB%E4%B9%90%E7%9A%84%E7%94%9F%E6%B4%BB/"/>
      <url>/2018/03/29/%E5%B9%B8%E7%A6%8F%E5%BF%AB%E4%B9%90%E7%9A%84%E7%94%9F%E6%B4%BB/</url>
      <content type="html"><![CDATA[<p>农民张大伯去买一斤小米</p><p>米店老板掏出一个秤，放在地上，随手拿起一把刀割破了一个米袋，米就哗哗哗的掉到秤上<br>等到秤的示数为一斤时的瞬间，老板堵住了米袋子的口子，把秤上的小米给了张大伯</p><p>张大伯心满意足的走在回家的路上，心中感慨老板真是个豪爽的人</p><p>突然，他觉得不太对劲：<br>按照<script type="math/tex">F=ma</script>，小米在落在秤盘上时应该会产生一个力……所以他买到的米其实不足一斤</p><p>第二天，张大伯将老板告上了官府。</p><p>张大伯把自己的想法说出来了<br>老板则表示这样做每次都没出过差错</p><p>县太爷听了，微微一笑：“这是误会，老板没有坑你”</p><p>说完，县太爷猛地取一根毛笔，蘸墨写到：</p><p>设秤距离抛出点的竖直高度为h<br>记小米的流速为<script type="math/tex">\lambda =m_{0} kg/s</script><br>则在秤恰好显示1斤时，取此后一极短时间<script type="math/tex">\Delta t</script></p><p>此时间内，与秤盘发生碰撞的小米质量设为<script type="math/tex">m</script><br>则<script type="math/tex">m=\lambda \bullet \Delta t</script><br>由动量定理，得</p><script type="math/tex; mode=display">F\Delta t=mv</script><p>其中<script type="math/tex">v=\sqrt{2gh}</script></p><p>联立得$F=\lambda \sqrt{2gh}$<br>也就是说此时秤的示数$N=F+m_{1}g$ （$m_1$为已经落在盘上小米的质量）</p><p>张大伯一听，愤怒的说：你看，我这不是损失了相当于<script type="math/tex">\frac{F}{g}=\lambda \sqrt{\frac{2h}{g} }</script>这么多的小米吗！</p><p>县太爷笑道：别忘了，现在空中还有小米呢</p><p>老板一听，感到有些疑惑：啊？这么说难道是我亏了吗？</p><p>县太爷接着写到：<br>记张大伯所说的<script type="math/tex">\lambda \sqrt{\frac{2h}{g} } =m_{2}</script><br>而此时在空中的小米质量为$m_{3} $<br>则<script type="math/tex">m_{3}=\lambda t</script><br>其中<script type="math/tex">t=\sqrt{\frac{2h}{g} }</script> ，代入发现<script type="math/tex">m_{2} =m_{3}</script></p><p>这也就是说，你们俩一点都没有亏</p><p>张大伯和米店老板听了，相视一笑，从此过上了快乐的生活。</p>]]></content>
      
      
        <tags>
            
            <tag> 娱乐 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>使用Hexo建立博客</title>
      <link href="/2018/03/29/%E4%BD%BF%E7%94%A8Hexo%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2/"/>
      <url>/2018/03/29/%E4%BD%BF%E7%94%A8Hexo%E5%BB%BA%E7%AB%8B%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h2 id="工具："><a href="#工具：" class="headerlink" title="工具："></a>工具：</h2><blockquote><p>Git, Node.js, Hexo, npm</p><h2 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h2><ol><li><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">安装Git</a></li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">安装Node.js</a><br>Node.js安装包中带有npm package manager，默认安装</li><li>安装Hexo<br>可以参考<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo的官方文档</a><br>在一个盘符下建立一个空目录，如<code>F:/Hexo</code>并在<code>cmd</code>中进入到该目录，执行npm安装命令<br><code>npm install -g hexo-cli</code><br>可能会出现几个WARN，但是不用担心，这不会影响正常使用。 然后输入<br><code>npm install hexo --save</code><br>自动将模块和版本号添加到dependencies部分；<br>然后输入<code>hexo -v</code><br>看到hexo的版本号，说明安装成功。</li></ol></blockquote><hr><h2 id="配置Hexo"><a href="#配置Hexo" class="headerlink" title="配置Hexo"></a>配置Hexo</h2><hr><ol><li>初始化Hexo<br><a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">hexo命令官方说明</a><blockquote><p>接着上面，输入<br><code>hexo init</code><br>然后输入<br><code>npm install</code></p></blockquote></li></ol><ol><li>建立本地站点<blockquote><p>生成静态文件<br><code>hexo g</code>   </p><p>部署站点<br><code>hexo d</code><br>启动Hexo本地服务器，预览页面效果<br><code>hexo s</code><br>然后访问<br><a href="http://localhost:4000" target="_blank" rel="noopener">本地站点</a><code>http://localhost:4000</code><br>将会看到初始的hexo页面，到此Hexo配置完成。</p></blockquote></li></ol><hr><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><ol><li><p>安装部署到git的插件<br><code>npm install --save hexo-deployer-git</code></p></li><li><p>安装使用<code>Latex</code> 语法来书写数学公式的插件</p><p><a href="https://blog.csdn.net/u014630987/article/details/78670258" target="_blank" rel="noopener"> 参考博客连接</a></p><p>需要注意的是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">修改</span><br><span class="line">escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span><br><span class="line">为</span><br><span class="line">escape: /^\\([`*\[\]()# +\-.!_&gt;])/,</span><br><span class="line"></span><br><span class="line">修改</span><br><span class="line">em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br><span class="line">为</span><br><span class="line">em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br><span class="line"></span><br><span class="line">被修改的文件是</span><br><span class="line">node_modules\kramed\lib\rules\inline.js</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="配置git个人信息"><a href="#配置git个人信息" class="headerlink" title="配置git个人信息"></a>配置git个人信息</h3><ol><li>设置Git的UserName和Email<blockquote><p><code>git config --global user.name &quot;yourgithub_name&quot;</code><br><code>git config --global user.email &quot;yourgithub_email_account&quot;</code></p></blockquote></li><li>生成密钥<blockquote><p><code>ssh-keygen -t rsa -C</code> <code>&quot;yourgithub_email_account&quot;</code><br> 输入<br> <code>eval &quot;$(ssh-agent -s)&quot;</code><br> 添加密钥到ssh-agent;<br> 再输入<br> <code>ssh-add ~/.ssh/id_rsa</code><br> 添加生成的SSH key到ssh-agent<br> 输入<br> <code>clip&lt; id_rsa.pub</code><br> 将公钥复制到粘贴板;<br> 登录Github，点击头像下的settings，添加Key;<br> 输入<br> <code>ssh -T git@github.com</code>  测试添加ssh是否成功。如果看到Hi后面是你的用户名，就说明成功了。</p></blockquote></li><li>问题：假如ssh-key配置失败，那么只要以下步骤就能完全解决<blockquote><p>首先，清除所有的<br> <code>rm -r ~/.ssh</code><br> 删除你在github中的public-key<br> 重新生成ssh密钥对<br> <code>ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</code><br>重新按上步骤配置key。</p></blockquote></li></ol><h3 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h3><blockquote><p>在根目录_config.yml文件中，找到Deployment，然后按照如下修改：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:yourname/yourname.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p></blockquote><p>比如我的仓库的地址是<code>git@github.com:Macrhard/Macrhard.github.io.git</code>，所以配置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:Macrhard/Macrhard.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="建立博客及部署"><a href="#建立博客及部署" class="headerlink" title="建立博客及部署"></a>建立博客及部署</h2><ol><li>新建一篇博客，在cmd执行命令：<br><code>hexo new post &quot;标题名&quot;</code><br>这时候在文件夹<code>source\_posts_posts</code>目录下将会看到已经创建的文件。</li><li>使用编辑器编好文章，那么就可以使用命令：<code>hexo d -g</code>，生成以及部署了</li><li>部署成功后访问你的地址：<code>http://用户名.github.io</code>。那么将看到生成的文章</li></ol>]]></content>
      
      
    </entry>
    
  
  
</search>
